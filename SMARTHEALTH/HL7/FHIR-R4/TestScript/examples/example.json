{
    "resourceType": "TestScript", 
    "type": "TestScript", 
    "meta": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ], 
        "versionId": "versionId as Text", 
        "_versionId": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ]
        }, 
        "lastUpdated": "15/11/2024", 
        "_lastUpdated": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ]
        }, 
        "source": "source as Text", 
        "_source": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ]
        }, 
        "profile": "profile as Text", 
        "security": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "system": "system as Text", 
            "_system": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "version": "version as Text", 
            "_version": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "code": "code as Text", 
            "_code": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "display": "display as Text", 
            "_display": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "userSelected": false, 
            "_userSelected": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }, 
        "tag": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "system": "system as Text", 
            "_system": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "version": "version as Text", 
            "_version": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "code": "code as Text", 
            "_code": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "display": "display as Text", 
            "_display": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "userSelected": false, 
            "_userSelected": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }
    }, 
    "implicitRules": "implicitRules as text", 
    "_implicitRules": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "language": "language as text", 
    "_language": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "text": {
        "status": "generated", 
        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative</b></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource &quot;testscript-example-readtest&quot; </p></div><p><b>url</b>: <code>http://hl7.org/fhir/TestScript/testscript-example-readtest</code></p><p><b>identifier</b>: id: urn:oid:1.3.6.1.4.1.21367.2005.3.7.9879</p><p><b>version</b>: 1.0</p><p><b>name</b>: TestScript Example Read Test</p><p><b>status</b>: draft</p><p><b>experimental</b>: true</p><p><b>date</b>: 2017-01-18</p><p><b>publisher</b>: HL7</p><p><b>contact</b>: Support: <a href=\"mailto:support@HL7.org\">support@HL7.org</a></p><p><b>description</b>: TestScript example resource with ported Sprinkler basic read tests R001, R002, R003, R004. The read tests will utilize user defined dynamic variables that will hold the Patient resource id values.</p><p><b>jurisdiction</b>: United States of America (the) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (unknown#US)</span></p><p><b>purpose</b>: Patient Read Operation</p><p><b>copyright</b>: \u00a9 HL7.org 2011+</p><blockquote><p><b>metadata</b></p><h3>Links</h3><table class=\"grid\"><tr><td>-</td><td><b>Url</b></td><td><b>Description</b></td></tr><tr><td>*</td><td><a href=\"http://hl7.org/fhir/patient.html\">http://hl7.org/fhir/patient.html</a></td><td>Demographics and other administrative information about an individual or animal receiving care or other health-related services.</td></tr></table><h3>Capabilities</h3><table class=\"grid\"><tr><td>-</td><td><b>Required</b></td><td><b>Validated</b></td><td><b>Description</b></td><td><b>Link</b></td><td><b>Capabilities</b></td></tr><tr><td>*</td><td>true</td><td>false</td><td>Patient Read Operation</td><td><a href=\"http://hl7.org/fhir/http.html#read\">http://hl7.org/fhir/http.html#read</a></td><td><a href=\"http://hl7.org/fhir/CapabilityStatement/example\">http://hl7.org/fhir/CapabilityStatement/example</a></td></tr></table></blockquote><p><b>profile</b>: <a href=\"http://hl7.org/fhir/StructureDefinition/Patient\">http://hl7.org/fhir/StructureDefinition/Patient</a> &quot;Patient&quot;</p><blockquote><p><b>variable</b></p><p><b>name</b>: KnownPatientResourceId</p><p><b>defaultValue</b>: example</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: NonExistsPatientResourceId</p><p><b>defaultValue</b>: does-not-exist</p></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Sprinkler Read Test R001</p><p><b>description</b>: Read a known Patient and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>EncodeRequestUrl</b></td><td><b>Params</b></td></tr><tr><td>*</td><td>Read (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code read = 'Read', stated as 'null')</td><td>Patient</td><td>Read the known Patient resource on the destination test system using the user defined dynamic variable ${KnownPatientResourceId}.</td><td>xml</td><td>true</td><td>/${KnownPatientResourceId}</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Response</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP status is 200(OK).</td><td>okay</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>ContentType</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned format is XML.</td><td>xml</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>HeaderField</b></td><td><b>Operator</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP Header Last-Modified is present. Warning only as the server might not support versioning.</td><td>Last-Modified</td><td>notEmpty</td><td>true</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Resource</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned resource type is Patient.</td><td>Patient</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>ValidateProfileId</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned Patient conforms to the base FHIR specification.</td><td>patient-profile</td><td>false</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Sprinkler Read Test R002</p><p><b>description</b>: Read an unknown Resource Type and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>EncodeRequestUrl</b></td><td><b>Params</b></td></tr><tr><td>*</td><td>Read (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code read = 'Read', stated as 'null')</td><td>Patient</td><td>Attempt to read the Parameters resource type. What we really want here is an illegal type but the build process won't allow that. Parameters is a valid resource which doesn't have an end-point so, this should fail.</td><td>xml</td><td>true</td><td>/1</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Response</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP status is 404(Not Found).</td><td>notFound</td><td>false</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Sprinkler Read Test R003</p><p><b>description</b>: Read a known, non-existing Patient and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>EncodeRequestUrl</b></td><td><b>Params</b></td></tr><tr><td>*</td><td>Read (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code read = 'Read', stated as 'null')</td><td>Patient</td><td>Attempt to read the non-existing Patient resource on the destination test system using the user defined dynamic variable ${NonExistsPatientResourceId}.</td><td>xml</td><td>true</td><td>/${NonExistsPatientResourceId}</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Response</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP status is 404(Not Found).</td><td>notFound</td><td>false</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Sprinkler Read Test R004</p><p><b>description</b>: Read a Patient using a known bad formatted resource id and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>EncodeRequestUrl</b></td><td><b>Params</b></td></tr><tr><td>*</td><td>Read (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code read = 'Read', stated as 'null')</td><td>Patient</td><td>Attempt to read a Patient resource on the destination test system using known bad formatted resource id.</td><td>xml</td><td>true</td><td>/ID-may-not-contain-CAPITALS</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Response</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP status is 400(Bad Request).</td><td>bad</td><td>false</td></tr></table></blockquote></blockquote></div>"
    }, 
    "extension": [
        "urn:ngsi-ld:Extension:001"
    ], 
    "modifierExtension": [
        "urn:ngsi-ld:Extension:modifier001"
    ], 
    "url": "http://hl7.org/fhir/TestScript/testscript-example-readtest", 
    "_url": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "identifier": {
        "system": "urn:ietf:rfc:3986", 
        "value": "urn:oid:1.3.6.1.4.1.21367.2005.3.7.9879"
    }, 
    "version": "1.0", 
    "_version": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "name": "TestScript Example Read Test", 
    "_name": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "title": "title as text", 
    "_title": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "status": "draft", 
    "_status": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "experimental": true, 
    "_experimental": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "date": "2017-01-18", 
    "_date": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "publisher": "HL7", 
    "_publisher": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "contact": [
        {
            "name": "Support", 
            "telecom": [
                {
                    "system": "email", 
                    "value": "support@HL7.org", 
                    "use": "work"
                }
            ]
        }
    ], 
    "description": "an instance of TestScript", 
    "_description": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "useContext": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ], 
        "code": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "system": "system as Text", 
            "_system": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "version": "version as Text", 
            "_version": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "code": "code as Text", 
            "_code": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "display": "display as Text", 
            "_display": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "userSelected": false, 
            "_userSelected": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }, 
        "valueCodeableConcept": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "coding": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "text": "text as Text", 
            "_text": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }, 
        "valueQuantity": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "value": 123456, 
            "_value": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "_comparator": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "unit": "unit as Text", 
            "_unit": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "system": "system as Text", 
            "_system": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "code": "code as Text", 
            "_code": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }, 
        "valueRange": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "low": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "high": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }, 
        "valueReference": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "reference": "reference as Text", 
            "_reference": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "type": "type as Text", 
            "_type": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "identifier": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "display": "display as Text", 
            "_display": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }
    }, 
    "jurisdiction": [
        {
            "coding": [
                {
                    "system": "urn:iso:std:iso:3166", 
                    "code": "US", 
                    "display": "United States of America (the)"
                }
            ]
        }
    ], 
    "purpose": "Patient Read Operation", 
    "_purpose": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "copyright": "\u00a9 HL7.org 2011+", 
    "_copyright": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ]
    }, 
    "origin": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ], 
        "index": 123456, 
        "_index": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ]
        }, 
        "profile": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "system": "system as Text", 
            "_system": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "version": "version as Text", 
            "_version": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "code": "code as Text", 
            "_code": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "display": "display as Text", 
            "_display": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "userSelected": false, 
            "_userSelected": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }
    }, 
    "destination": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ], 
        "index": 123456, 
        "_index": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ]
        }, 
        "profile": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "system": "system as Text", 
            "_system": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "version": "version as Text", 
            "_version": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "code": "code as Text", 
            "_code": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "display": "display as Text", 
            "_display": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "userSelected": false, 
            "_userSelected": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }
    }, 
    "metadata": {
        "link": [
            {
                "url": "http://hl7.org/fhir/patient.html", 
                "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services."
            }
        ], 
        "capability": [
            {
                "required": true, 
                "validated": false, 
                "description": "Patient Read Operation", 
                "link": [
                    "http://hl7.org/fhir/http.html#read"
                ], 
                "capabilities": "http://hl7.org/fhir/CapabilityStatement/example"
            }
        ]
    }, 
    "fixture": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ], 
        "autocreate": false, 
        "_autocreate": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ]
        }, 
        "autodelete": false, 
        "_autodelete": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ]
        }, 
        "resource": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "reference": "reference as Text", 
            "_reference": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "type": "type as Text", 
            "_type": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "identifier": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "display": "display as Text", 
            "_display": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }
    }, 
    "profile": [
        {
            "id": "patient-profile", 
            "reference": "http://hl7.org/fhir/StructureDefinition/Patient"
        }
    ], 
    "variable": [
        {
            "name": "KnownPatientResourceId", 
            "defaultValue": "example"
        }, 
        {
            "name": "NonExistsPatientResourceId", 
            "defaultValue": "does-not-exist"
        }
    ], 
    "setup": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ], 
        "action": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "operation": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }, 
            "assert": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }
    }, 
    "test": [
        {
            "id": "R001", 
            "name": "Sprinkler Read Test R001", 
            "description": "Read a known Patient and validate response.", 
            "action": [
                {
                    "operation": {
                        "type": {
                            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes", 
                            "code": "read"
                        }, 
                        "resource": "Patient", 
                        "description": "Read the known Patient resource on the destination test system using the user defined dynamic variable ${KnownPatientResourceId}.", 
                        "accept": "xml", 
                        "encodeRequestUrl": true, 
                        "params": "/${KnownPatientResourceId}"
                    }
                }, 
                {
                    "assert": {
                        "description": "Confirm that the returned HTTP status is 200(OK).", 
                        "response": "okay", 
                        "warningOnly": false
                    }
                }, 
                {
                    "assert": {
                        "description": "Confirm that the returned format is XML.", 
                        "contentType": "xml", 
                        "warningOnly": false
                    }
                }, 
                {
                    "assert": {
                        "description": "Confirm that the returned HTTP Header Last-Modified is present. Warning only as the server might not support versioning.", 
                        "headerField": "Last-Modified", 
                        "operator": "notEmpty", 
                        "warningOnly": true
                    }
                }, 
                {
                    "assert": {
                        "description": "Confirm that the returned resource type is Patient.", 
                        "resource": "Patient", 
                        "warningOnly": false
                    }
                }, 
                {
                    "assert": {
                        "description": "Confirm that the returned Patient conforms to the base FHIR specification.", 
                        "validateProfileId": "patient-profile", 
                        "warningOnly": false
                    }
                }
            ]
        }, 
        {
            "id": "R002", 
            "name": "Sprinkler Read Test R002", 
            "description": "Read an unknown Resource Type and validate response.", 
            "action": [
                {
                    "operation": {
                        "type": {
                            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes", 
                            "code": "read"
                        }, 
                        "resource": "Patient", 
                        "description": "Attempt to read the Parameters resource type. What we really want here is an illegal type but the build process won't allow that. Parameters is a valid resource which doesn't have an end-point so, this should fail.", 
                        "accept": "xml", 
                        "encodeRequestUrl": true, 
                        "params": "/1"
                    }
                }, 
                {
                    "assert": {
                        "description": "Confirm that the returned HTTP status is 404(Not Found).", 
                        "response": "notFound", 
                        "warningOnly": false
                    }
                }
            ]
        }, 
        {
            "id": "R003", 
            "name": "Sprinkler Read Test R003", 
            "description": "Read a known, non-existing Patient and validate response.", 
            "action": [
                {
                    "operation": {
                        "type": {
                            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes", 
                            "code": "read"
                        }, 
                        "resource": "Patient", 
                        "description": "Attempt to read the non-existing Patient resource on the destination test system using the user defined dynamic variable ${NonExistsPatientResourceId}.", 
                        "accept": "xml", 
                        "encodeRequestUrl": true, 
                        "params": "/${NonExistsPatientResourceId}"
                    }
                }, 
                {
                    "assert": {
                        "description": "Confirm that the returned HTTP status is 404(Not Found).", 
                        "response": "notFound", 
                        "warningOnly": false
                    }
                }
            ]
        }, 
        {
            "id": "R004", 
            "name": "Sprinkler Read Test R004", 
            "description": "Read a Patient using a known bad formatted resource id and validate response.", 
            "action": [
                {
                    "operation": {
                        "type": {
                            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes", 
                            "code": "read"
                        }, 
                        "resource": "Patient", 
                        "description": "Attempt to read a Patient resource on the destination test system using known bad formatted resource id.", 
                        "accept": "xml", 
                        "encodeRequestUrl": true, 
                        "params": "/ID-may-not-contain-CAPITALS"
                    }
                }, 
                {
                    "assert": {
                        "description": "Confirm that the returned HTTP status is 400(Bad Request).", 
                        "response": "bad", 
                        "warningOnly": false
                    }
                }
            ]
        }
    ], 
    "teardown": {
        "id": "id as Text", 
        "extension": [
            "urn:ngsi-ld:Extension:001"
        ], 
        "action": {
            "id": "id as Text", 
            "extension": [
                "urn:ngsi-ld:Extension:001"
            ], 
            "operation": {
                "extension": [
                    "urn:ngsi-ld:Extension:001"
                ]
            }
        }
    }, 
    "id": "urn:ngsi-ld:TestScript:001"
}